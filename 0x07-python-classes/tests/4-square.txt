The ``4-square`` module
=======================

This is a text file in reStructuredText format to test the above module.

This module creates:
one class ``Square`` which contains
    4 methods
        __init__(self, size)
    area(self)
    size(self)
    size(self, value)
    1 hidden attribute
        __size

Using ``Square``
-------------------

First import ``Square`` from the ``4-square`` module:
      >>> Square =  __import__('4-square').Square

Now use it:

    >>> my_square = Square(3)
    >>> print(type(my_square))
    <class '4-square.Square'>

Numbers
=======

	>>> my_square.size = 2
	>>> print(my_square.size)
	2

Non-Numbers
===========

	>>> my_square.size = 2.3
	Traceback (most recent call last):
	TypeError: size must be an integer
	>>> my_square.size = 'a'
	Traceback (most recent call last):
	TypeError: size must be an integer
	>>> my_square.size = -1
	Traceback (most recent call last):
	ValueError: size must be >= 0

Computing Area
==============

	>>> print(my_square.size)
	2
	>>> my_square.area()
	4
